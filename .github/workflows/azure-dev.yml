name: azd up

on:
  workflow_dispatch:
    inputs:
      deleteAzureResources:
        description: 'Delete Azure resources at the end'
        required: true
        type: boolean
        default: true
  push:
    # Run when commits are pushed to mainline branch (main or master)
    # Set this to the mainline branch you are using
    branches:
      - main
      - master
    paths-ignore:
      - '.gitignore'
      - '.gitattributes'
      - '**/*.md'
      - '**/*.txt'
      - '.devcontainer/**'

# GitHub Actions workflow to deploy to Azure using azd
# To configure required secrets for connecting to Azure, simply run `azd pipeline config`

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure-openid-connect
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}-${{ github.run_id }}${{ github.run_number }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: microsoft
          java-version: 17
          cache: 'maven'

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh

      - name: Provision Infrastructure
        run: azd provision --no-prompt
        env:
          # See https://github.com/Azure/azure-dev/issues/3104 for more details
          AZD_INITIAL_ENVIRONMENT_CONFIG: '{}'

      - name: Deploy Application
        run: azd deploy --no-prompt

      - name: Delete Azure resources
        if: ${{ always() && (github.event_name != 'workflow_dispatch' || inputs.deleteAzureResources) }}
        run: azd down --force --purge
